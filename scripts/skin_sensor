#!/usr/bin/env python
import rospy
from dynamic_graph_bridge_msgs.msg import Vector
from cellularskin_msgs.msg import SkinPatch


class proximity_range_bridge:
    def __init__(self):
        rospy.init_node('proximity_range_bridge', anonymous=True)
        self.proximity_vector = Vector()
        self.proximity_vector.data = [0.05,] *7
        self.pub = rospy.Publisher('proximity_data', Vector, queue_size=10)
        rospy.Subscriber("cellularskin_patch", SkinPatch, self.callback)
        self.rate = rospy.Rate(10) # 10hz

    def callback(self,data):
        #self.proximity_vector.data = [0.05,]*7
        for i in range(7):
            self.proximity_vector.data[i] = (1 - data.skin_cell[i].proximity[0].range)*10
            #self.proximity_vector.data[i] = 1        
    
    def run(self):
        while not rospy.is_shutdown():
            self.pub.publish(self.proximity_vector)
            self.rate.sleep()

if __name__ == '__main__':
    prb = proximity_range_bridge()
    prb.run()
    rospy.spin()
